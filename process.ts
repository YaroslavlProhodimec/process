// üìÅ cache.js
let cache = new Map();

// –≤—ã—á–∏—Å–ª—è–µ–º –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
function process(obj) {
  if (!cache.has(obj)) {
    let result = /* —Ç—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ */ obj;

    cache.set(obj, result);
  }

  return cache.get(obj);
}

// –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º process() –≤ –¥—Ä—É–≥–æ–º —Ñ–∞–π–ª–µ:

// üìÅ main.js
let obj = {
  /* –¥–æ–ø—É—Å—Ç–∏–º, —É –Ω–∞—Å –µ—Å—Ç—å –∫–∞–∫–æ–π-—Ç–æ –æ–±—ä–µ–∫—Ç */
};

let result1 = process(obj); // –≤—ã—á–∏—Å–ª–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç

// ...–ø–æ–∑–∂–µ, –∏–∑ –¥—Ä—É–≥–æ–≥–æ –º–µ—Å—Ç–∞ –≤ –∫–æ–¥–µ...
let result2 = process(obj); // —Ä–∞–Ω–µ–µ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∑—è—Ç –∏–∑ –∫–µ—à–∞

// ...–ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω:
obj = null;

alert(cache.size); // 1 (–£–ø—Å! –û–±—ä–µ–∫—Ç –≤—Å—ë –µ—â—ë –≤ –∫–µ—à–µ, –∑–∞–Ω–∏–º–∞–µ—Ç –ø–∞–º—è—Ç—å!)
let prices = {
  banana: 1,
  orange: 2,
  meat: 4,
};

let doublePrices = Object.fromEntries(
  // –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ –º–∞—Å—Å–∏–≤, –∑–∞—Ç–µ–º map, –∑–∞—Ç–µ–º fromEntries –æ–±—Ä–∞—Ç–Ω–æ –æ–±—ä–µ–∫—Ç
  Object.entries(prices).map((el) => [el[0], el[1] * 2]),
);

console.log(doublePrices.meat); // 8
//
let salaries = {
  John: 100,
  Pete: 300,
  Mary: 250,
};

const sumSalaries = (input) => {
  let sum = 0;
  for (ele of Object.values(input)) {
    sum += ele;
  }
  return sum;
};

console.log(sumSalaries(salaries)); // 650
//
–≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω—É–∂–µ–Ω
let [firstName, title, ...perkoset] = [
  "Julius",
  "Caesar",
  "Consul",
  "of the Roman Republic",
];

console.log(title); // Caesar
console.log(firstName); // Julius
console.log(perkoset); // "Consul","of the Roman Republic",
let user = {
  name: "John",
  age: 30,
};
console.log(Object.entries(user));
—Ü–∏–∫–ª –ø–æ –∫–ª—é—á–∞–º –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º
for (let [key, value] of Object.entries({ name: "John" })) {
  console.log(`${key}:${value}`); // name:John, –∑–∞—Ç–µ–º age:30
}
let [key, value] = [{ name: "John" }];
console.log(key);
console.log(value);
let user = new Map();
user.set("name", "John");
user.set("age", "30");
console.log(user);
//
let a = 1;
let b = 3;
let c = a;

a = b;
b = c;
console.log(a, b);
[b, a] = [a, b];
console.log(a, b);
let options = {
  title: "Menu",
};

let { width = 100, height = 200, title } = options;

console.log(options); // Menu
console.log(width);  // 100
console.log(height); // 200
let options = {
  title: "Menu"
};

let {width: w = 100, height: h = 200, title} = options;
let options = {
  size: {
    width: 100,
    height: 200
  },
  items: ["Cake", "Donut"],
  extra: true
};

// –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–∑–±–∏—Ç–∞ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
let {
  size: { // –ø–æ–ª–æ–∂–∏–º size —Å—é–¥–∞
    width,
    height
  },
  items: [item1, item2], // –¥–æ–±–∞–≤–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã –∫ items
  title = "Menu" // –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ–±—ä–µ–∫—Ç–µ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
} = options;

console.log(title);  // Menu
console.log(width);  // 100
console.log(height); // 200
console.log(item1);  // Cake
console.log(item2);  // Donut
let options = {
  size: {
    width: 100,
    height: 200
  },
  items: ["Cake", "Donut"],
  extra: true
};

// –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–∑–±–∏—Ç–∞ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
let {
  size: { // –ø–æ–ª–æ–∂–∏–º size —Å—é–¥–∞
    width,
    height
  },
  items: [item1, item2], // –¥–æ–±–∞–≤–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã –∫ items
  title = "Menu" // –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ–±—ä–µ–∫—Ç–µ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
} = options;